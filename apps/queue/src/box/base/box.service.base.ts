/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Box as PrismaBox } from "@prisma/client";

export class BoxServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BoxCountArgs, "select">): Promise<number> {
    return this.prisma.box.count(args);
  }

  async boxes(args: Prisma.BoxFindManyArgs): Promise<PrismaBox[]> {
    return this.prisma.box.findMany(args);
  }
  async box(args: Prisma.BoxFindUniqueArgs): Promise<PrismaBox | null> {
    return this.prisma.box.findUnique(args);
  }
  async createBox(args: Prisma.BoxCreateArgs): Promise<PrismaBox> {
    return this.prisma.box.create(args);
  }
  async updateBox(args: Prisma.BoxUpdateArgs): Promise<PrismaBox> {
    return this.prisma.box.update(args);
  }
  async deleteBox(args: Prisma.BoxDeleteArgs): Promise<PrismaBox> {
    return this.prisma.box.delete(args);
  }
}
